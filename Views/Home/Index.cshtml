@{
    ViewData["Title"] = "Home Page";
}
@using Microsoft.AspNetCore.Http;
@using Module_2_Weather.Controllers;

@*<div class="text-center">
        <h1 class="display-4">Welcome</h1>
        <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
    </div>*@
<head>
    <title>
        Weather Info
    </title>

    <link rel="stylesheet" href="C:\Users\user\source\repos\Module_2_Weather\Module_2_Weather\wwwroot\css\site.css">
</head>

<div class="text-center">
    <p>Welcome Asadbek</p>
    <div class="search">

        <p style="color: white; text-align: center;"> <strong>Weather</strong></p>
        <form>
            <label>
                <input type="text" placeholder="    Name of city" name="Input">
                <input type="button" name="Search" value="Search">
            </label>
        </form>
        <h3>@HomeController.weatherContent.Result.Name</h3>
        <h3>@HomeController.weatherContent.Result.Main.Temp</h3>

    </div>
    <!--<meta charset="utf-8" />
    <script src="https://maps.googleapis.com/maps/api/js?key=%REACT_APP_GOOGLE_API_KEY%&libraries=places"></script>
    <link rel="shortcut icon" href="E:\Epam_Stajirovka\ez_weather_forecast_react_frontend-master\public\favicon.ico" />
    <meta name="viewport"
          content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="theme-color" content="#000000" />-->
    <!--
      manifest.json provides metadata used when your web app is added to the
      homescreen on Android. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <!--<link rel="manifest" href="E:\Epam_Stajirovka\ez_weather_forecast_react_frontend-master\public\manifest.json" />-->
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.

    -->
    <!--<title>EZW R2</title>-->
</div>
<body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div class="bg_ezw">
        <div class="container_ezw">
            <div class="wrap_ezw">
                <div id="root"></div>
            </div>
        </div>
    </div>
</body>
